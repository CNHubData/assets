name: Process and Upload Images from JSON

on:
  workflow_dispatch:

jobs:
  process-and-upload-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'

      - name: Prepare Certificate
        run: |
          echo ${{ secrets.PFX_CERTIFICATE }} | base64 -d > ./certificate.pfx

      - name: Install PnP PowerShell
        run: pwsh -Command "Install-Module PnP.PowerShell -AllowClobber -Force"

      - name: Download JSON file from SharePoint
        shell: pwsh
        env:
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
          CERTIFICATE_PATH: ./certificate.pfx
        run: |
          $tenantId = 'a37996c3-3856-4ede-9812-4bbd17884862'
          $appId = 'd7bcacec-6088-406d-a61a-e0d61f30c2d7'
          $siteUrl = 'https://coopernorman.sharepoint.com/sites/CN-DataInformation'
          $jsonFilePath = '/Shared Documents/other/profile-picture-blob.json'
          $localPath = 'profile_pictures' # Path in the GitHub runner
          $jsonFileName = 'profile-picture-blob.json' # Name of the file

          # Ensure the directory exists
          if (-not (Test-Path -Path $localPath)) {
              New-Item -ItemType Directory -Path $localPath -Force
          }

          $certificatePath = "$PWD/certificate.pfx"
          $secureCertificatePassword = ConvertTo-SecureString -String $env:CERTIFICATE_PASSWORD -AsPlainText -Force
          $certificate = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2($certificatePath, $secureCertificatePassword)

          Connect-PnPOnline -Url $siteUrl -ClientId $appId -Tenant $tenantId -CertificatePath $certificatePath -CertificatePassword $secureCertificatePassword
          Get-PnPFile -ServerRelativeUrl $jsonFilePath -Path $localPath -FileName $jsonFileName -AsFile
          Disconnect-PnPOnline

      - name: Process JSON and Save Images
        shell: pwsh
        run: |
          $jsonFile = "profile_pictures/profile-picture-blob.json"
          $jsonContent = Get-Content -Path $jsonFile -Raw | ConvertFrom-Json
          foreach ($entry in $jsonContent) {
              $imageData = $entry.inputs.image_data
              $imageName = $entry.inputs.image_name
              $imagePath = "profile_pictures/$imageName"
              $imageDataBytes = [System.Convert]::FromBase64String($imageData)
              [System.IO.File]::WriteAllBytes($imagePath, $imageDataBytes)
          }

      - name: Commit and Push Images to Repository
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add profile_pictures/*.jpg
          git commit -m "Add processed images from JSON"
          git push
