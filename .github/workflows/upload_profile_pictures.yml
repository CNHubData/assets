name: Download SharePoint JSON File

on:
  workflow_dispatch:

jobs:
  download-json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '3.1.x'  # Specify a .NET version that includes PowerShell

      - name: Prepare Certificate
        run: |
          echo ${{ secrets.PFX_CERTIFICATE }} | base64 -d > ./certificate.pfx

      - name: Install PnP PowerShell
        run: pwsh -Command "Install-Module PnP.PowerShell -AllowClobber -Force"

      - name: Check Secret Availability
        shell: pwsh
        env:
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
          CERTIFICATE_PATH: ./certificate.pfx
        run: |
          $nullCheck = [string]::IsNullOrEmpty($env:CERTIFICATE_PASSWORD)
          Write-Output "Is password null or empty: $nullCheck"


      - name: Check Secret Length
        shell: pwsh
        env:
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
          CERTIFICATE_PATH: ./certificate.pfx
        run: |
          $length = $env:CERTIFICATE_PASSWORD.Length
          Write-Output "Password length: $length"


      - name: Download JSON file from SharePoint
        shell: pwsh
        env:
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
        run: |
          $tenantId = 'a37996c3-3856-4ede-9812-4bbd17884862'
          $appId = 'd7bcacec-6088-406d-a61a-e0d61f30c2d7'
          $siteUrl = 'https://coopernorman.sharepoint.com/sites/CN-DataInformation'
          $jsonFilePath = '/Shared Documents/other/profile-picture-blob.json'
          $localPath = 'profile-pictures' # Path in the GitHub runner
          $jsonFileName = 'profile-picture-blob.json' # Name of the file

          $certificatePath = "$PWD/certificate.pfx"
          $secureCertificatePassword = ConvertTo-SecureString -String $env:CERTIFICATE_PASSWORD -AsPlainText -Force
          $certificate = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2($certificatePath, $secureCertificatePassword)

          Connect-PnPOnline -Url $siteUrl -ClientId $appId -Tenant $tenantId -CertificatePath $certificatePath
          Get-PnPFile -ServerRelativeUrl $jsonFilePath -Path $localPath -FileName $jsonFileName -AsFile
          Disconnect-PnPOnline


      - name: Commit and Push File to Repository
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add profile-pictures
          git commit -m "Add downloaded JSON file"
          git push
